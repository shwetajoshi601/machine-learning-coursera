>> A = [1 2; 3 4; 5 6]

A =

     1     2
     3     4
     5     6

>> B = [10 11; 12 13; 14 15]
C = [1 2; 3 4]
A*C
A.*B
A.^2 % element wise squaring
v = [1;2;3]
1./v
1./A
log(v) % element wise logarithm
exp(v) % element wise exponentiation
abs(v) % element wise absolute values
abs([-1; 2; -3])
-v
v + ones(length(v), 1)
v+1
A
A'
(A')'
[val, ind] = max(A)
a = [15, -1, 0.5, 20]
[val, ind] = max(a)
a < 3 % element wise comparison
find(a < 3)
A = magic(3) % creates a magic matrix - all rows, columns and diagonals sum up to the same value
[r, c] = find(A>=7)
% in the above result, elements at (1,1), (3,2) and (2,3) are >= 7. r=row, c=column
A(2,3)
a
sum(a)
prod(a)
floor(a)
ceil(a)
rand(3)
max(rand(3), rand(3))
% The above result gives element wise max of two random matrices
A
max(A,[],1) % take the column wise maximum
max(A,[],2) % takes the row wise maximum
A = [1 2; 3 4; 5 6]

B =

    10    11
    12    13
    14    15


C =

     1     2
     3     4


ans =

     7    10
    15    22
    23    34


ans =

    10    22
    36    52
    70    90


ans =

     1     4
     9    16
    25    36


v =

     1
     2
     3


ans =

    1.0000
    0.5000
    0.3333


ans =

    1.0000    0.5000
    0.3333    0.2500
    0.2000    0.1667


ans =

         0
    0.6931
    1.0986


ans =

    2.7183
    7.3891
   20.0855


ans =

     1
     2
     3


ans =

     1
     2
     3


ans =

    -1
    -2
    -3


ans =

     2
     3
     4


ans =

     2
     3
     4


A =

     1     2
     3     4
     5     6


ans =

     1     3     5
     2     4     6


ans =

     1     2
     3     4
     5     6


val =

     5     6


ind =

     3     3


a =

   15.0000   -1.0000    0.5000   20.0000


val =

    20


ind =

     4


ans =

  1Ã—4 logical array

   0   1   1   0


ans =

     2     3


A =

     8     1     6
     3     5     7
     4     9     2


r =

     1
     3
     2


c =

     1
     2
     3


ans =

     7


a =

   15.0000   -1.0000    0.5000   20.0000


ans =

   34.5000


ans =
  -150


ans =

    15    -1     0    20


ans =

    15    -1     1    20


ans =

    0.8147    0.9134    0.2785
    0.9058    0.6324    0.5469
    0.1270    0.0975    0.9575


ans =

    0.9649    0.9572    0.6787
    0.9595    0.8491    0.7577
    0.9706    0.9340    0.9157


A =

     8     1     6
     3     5     7
     4     9     2


ans =

     8     9     7


ans =

     8
     7
     9


A =

     1     2
     3     4
     5     6

>> A = [1,2,3;4,5,6;7,8,9]

A =

     1     2     3
     4     5     6
     7     8     9

>> max(A, [], 1)

ans =

     7     8     9


>> % maximum per column, for per row -> max(A, [], 2)
>> max(max(A))

ans =

     9

>> A(:)

ans =

     1
     4
     7
     2
     5
     8
     3
     6
     9

>> max(A(:))

ans =

     9

>> A=magic(9)

A =

    47    58    69    80     1    12    23    34    45
    57    68    79     9    11    22    33    44    46
    67    78     8    10    21    32    43    54    56
    77     7    18    20    31    42    53    55    66
     6    17    19    30    41    52    63    65    76
    16    27    29    40    51    62    64    75     5
    26    28    39    50    61    72    74     4    15
    36    38    49    60    71    73     3    14    25
    37    48    59    70    81     2    13    24    35

>> sum(A,1) % column wise sum

ans =

   369   369   369   369   369   369   369   369   369

>> sum(A,2) % row wise sum

ans =

   369
   369
   369
   369
   369
   369
   369
   369
   369

>> eye(9)

ans =

     1     0     0     0     0     0     0     0     0
     0     1     0     0     0     0     0     0     0
     0     0     1     0     0     0     0     0     0
     0     0     0     1     0     0     0     0     0
     0     0     0     0     1     0     0     0     0
     0     0     0     0     0     1     0     0     0
     0     0     0     0     0     0     1     0     0
     0     0     0     0     0     0     0     1     0
     0     0     0     0     0     0     0     0     1

>> A .* eye(9) % element wise multiplication with identity matrix

ans =

    47     0     0     0     0     0     0     0     0
     0    68     0     0     0     0     0     0     0
     0     0     8     0     0     0     0     0     0
     0     0     0    20     0     0     0     0     0
     0     0     0     0    41     0     0     0     0
     0     0     0     0     0    62     0     0     0
     0     0     0     0     0     0    74     0     0
     0     0     0     0     0     0     0    14     0
     0     0     0     0     0     0     0     0    35

>> sum(sum(A.*eye(9)))

ans =

   369

>> 
